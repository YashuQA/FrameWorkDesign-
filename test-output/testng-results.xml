<?xml version="1.0" encoding="UTF-8"?>
<testng-results total="5" passed="4" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-03-04T05:38:11Z" name="Suite" finished-at="2023-03-04T05:38:44Z" duration-ms="33609">
    <groups>
    </groups>
    <test started-at="2023-03-04T05:38:11Z" name="DemoTest" finished-at="2023-03-04T05:38:24Z" duration-ms="12823">
      <class name="tests.DemoTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.DemoTest@590c73d3]" started-at="2023-03-04T11:08:11Z" name="setUp" finished-at="2023-03-04T11:08:17Z" duration-ms="6724" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="demo()[pri:0, instance:tests.DemoTest@590c73d3]" started-at="2023-03-04T11:08:17Z" name="demo" finished-at="2023-03-04T11:08:17Z" duration-ms="18" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:496)
	at org.testng.Assert.assertTrue(Assert.java:42)
	at org.testng.Assert.assertTrue(Assert.java:52)
	at tests.DemoTest.demo(DemoTest.java:29)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1191)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1116)
	at org.testng.TestNG.run(TestNG.java:1024)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- demo -->
        <test-method is-config="true" signature="closure()[pri:0, instance:tests.DemoTest@590c73d3]" started-at="2023-03-04T11:08:18Z" name="closure" finished-at="2023-03-04T11:08:19Z" duration-ms="1151" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closure -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.DemoTest@590c73d3]" started-at="2023-03-04T11:08:19Z" name="setUp" finished-at="2023-03-04T11:08:23Z" duration-ms="3829" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testSuccess()[pri:0, instance:tests.DemoTest@590c73d3]" started-at="2023-03-04T11:08:23Z" name="testSuccess" finished-at="2023-03-04T11:08:23Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSuccess -->
        <test-method is-config="true" signature="closure()[pri:0, instance:tests.DemoTest@590c73d3]" started-at="2023-03-04T11:08:23Z" name="closure" finished-at="2023-03-04T11:08:24Z" duration-ms="871" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closure -->
      </class> <!-- tests.DemoTest -->
    </test> <!-- DemoTest -->
    <test started-at="2023-03-04T05:38:24Z" name="RegisterTest" finished-at="2023-03-04T05:38:36Z" duration-ms="11983">
      <class name="tests.RegisterTest">
        <test-method is-config="true" signature="openApplication()[pri:0, instance:tests.RegisterTest@3d484181]" started-at="2023-03-04T11:08:24Z" name="openApplication" finished-at="2023-03-04T11:08:27Z" duration-ms="3357" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openApplication -->
        <test-method signature="register(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:tests.RegisterTest@3d484181]" started-at="2023-03-04T11:08:27Z" name="register" data-provider="dataSetter" finished-at="2023-03-04T11:08:29Z" duration-ms="1646" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Nikki]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[qa]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[nikki@gmail.com]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[7869374399]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[nikki12345!]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[nikki12345!]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- register -->
        <test-method is-config="true" signature="closure()[pri:0, instance:tests.RegisterTest@3d484181]" started-at="2023-03-04T11:08:29Z" name="closure" finished-at="2023-03-04T11:08:30Z" duration-ms="874" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closure -->
        <test-method is-config="true" signature="openApplication()[pri:0, instance:tests.RegisterTest@3d484181]" started-at="2023-03-04T11:08:30Z" name="openApplication" finished-at="2023-03-04T11:08:33Z" duration-ms="3579" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openApplication -->
        <test-method signature="register(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:tests.RegisterTest@3d484181]" started-at="2023-03-04T11:08:33Z" name="register" data-provider="dataSetter" finished-at="2023-03-04T11:08:35Z" duration-ms="1631" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[yashu]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[qa]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[yashuqa001@gmail.com]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[9550573030]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[yashu12345!]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[yashu12345!]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- register -->
        <test-method is-config="true" signature="closure()[pri:0, instance:tests.RegisterTest@3d484181]" started-at="2023-03-04T11:08:35Z" name="closure" finished-at="2023-03-04T11:08:36Z" duration-ms="890" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closure -->
      </class> <!-- tests.RegisterTest -->
    </test> <!-- RegisterTest -->
    <test started-at="2023-03-04T05:38:36Z" name="LoginTest" finished-at="2023-03-04T05:38:44Z" duration-ms="8476">
      <class name="tests.LoginTest">
        <test-method is-config="true" signature="openApplication()[pri:0, instance:tests.LoginTest@1b065145]" started-at="2023-03-04T11:08:36Z" name="openApplication" finished-at="2023-03-04T11:08:39Z" duration-ms="3448" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openApplication -->
        <test-method signature="Login()[pri:0, instance:tests.LoginTest@1b065145]" started-at="2023-03-04T11:08:39Z" name="Login" finished-at="2023-03-04T11:08:43Z" duration-ms="4012" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Login -->
        <test-method is-config="true" signature="closure()[pri:0, instance:tests.LoginTest@1b065145]" started-at="2023-03-04T11:08:43Z" name="closure" finished-at="2023-03-04T11:08:44Z" duration-ms="1015" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closure -->
      </class> <!-- tests.LoginTest -->
    </test> <!-- LoginTest -->
  </suite> <!-- Suite -->
</testng-results>
